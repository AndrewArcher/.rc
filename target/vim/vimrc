set nocompatible    " enable us VIM thigns at the cost of vi things

set viminfo=%,<800,'10,/50,:100,h,f0,n~/.cache/viminfo
"           | |    |   |   |    | |  + viminfo file path
"           | |    |   |   |    | + file marks 0-9,A-Z 0=NOT stored
"           | |    |   |   |    + disable 'hlsearch' loading viminfo
"           | |    |   |   + command-line history saved
"           | |    |   + search history saved
"           | |    + files marks saved
"           | + lines saved each register (new name for ", vi6.2)
"           + save/restore buffer list

set encoding=utf-8
syntax on
filetype plugin indent on

" 
set ttyfast             " faster redraw
set lazyredraw          " wait to redraw

" file management
set autoread            " automatically read changed files
set autowrite           " automatically save before :next, :make, ..etc
set noswapfile          " don't use swapfile
set nobackup            " don't create backup files

" search
set incsearch           " shows match while typing
set hlsearch            " highlight found searches
set ignorecase          " search case insensitive...
set smartcase           " ...but not if it begins with an upper case

" interface
set number              " show line numbers
set signcolumn=yes      " always show left bar for breakpoints etc
colorscheme toast

" shortcuts
inoremap kj <Esc>
noremap <ScrollWheelDown> k
noremap <ScrollWheelUp> j

" file formatting
set autoindent          " automatically indent
set tabstop=4           " tabs are 4 spaces wide
set shiftwidth=0        " '<' and '>' shifts de/indent by tabstop distance
set expandtab           " convert tabs to spaces

"CoC Settings

" Use tab for trigger completion with characters ahead and navigate
" NOTE: There's always complete item selected by default, you may want to enable
" no select by `"suggest.noselect": true` in your configuration file
" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by
" other plugin before putting this into your config
inoremap <silent><expr> <TAB>
      \ coc#pum#visible() ? coc#pum#next(1) :
      \ CheckBackspace() ? "\<Tab>" :
      \ coc#refresh()
inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"

function! CheckBackspace() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction


" GoTo code navigation
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" Use K to show documentation in preview window
nnoremap <silent> K :call ShowDocumentation()<CR>

function! ShowDocumentation()
  if CocAction('hasProvider', 'hover')
    call CocActionAsync('doHover')
  else
    call feedkeys('K', 'in')
  endif
endfunction

" Symbol renaming
nmap <leader>rn <Plug>(coc-rename)

" Add `:Format` command to format current buffer
command! -nargs=0 Format :call CocActionAsync('format')


